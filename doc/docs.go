// Package doc Code generated by swaggo/swag. DO NOT EDIT
package doc

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/books": {
            "get": {
                "description": "Get a paginated list of books for the user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Get list of books with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of books",
                        "schema": {
                            "$ref": "#/definitions/book.RespBooks"
                        }
                    }
                }
            },
            "post": {
                "description": "创建一个新的书册，可选地关联标签",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "创建书册",
                "parameters": [
                    {
                        "description": "书册创建数据",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/book.ReqCreateBook"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "成功创建书册",
                        "schema": {
                            "$ref": "#/definitions/book.RespBook"
                        }
                    },
                    "400": {
                        "description": "参数错误",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/books/{id}": {
            "get": {
                "description": "Get detailed information about a book.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Get a book by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved book",
                        "schema": {
                            "$ref": "#/definitions/book.RespBook"
                        }
                    }
                }
            },
            "put": {
                "description": "Update information for an existing book.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Update book information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Book update data",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/book.ReqCreateBook"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated book",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a book from the system by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Delete a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted book",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/items": {
            "get": {
                "description": "Get a list of items for the user with optional filters for book and type and support for pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Get a list of items with optional filters",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "book_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Type of item",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved items",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Item"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new item in the system with optional book affiliations and tags.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Create a new item",
                "parameters": [
                    {
                        "description": "Item creation data",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.ReqCreateItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created item with books and tags",
                        "schema": {
                            "$ref": "#/definitions/model.Item"
                        }
                    },
                    "400": {
                        "description": "Bad Request if too many books or tags, or bad data",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/{id}": {
            "get": {
                "description": "Get detailed information about an item.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Get an item by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved item",
                        "schema": {
                            "$ref": "#/definitions/model.Item"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an item's type, content, or associated tags.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Update an item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Item update data",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.ReqUpdateItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated item",
                        "schema": {
                            "$ref": "#/definitions/module.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request with invalid item ID or update data",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error with failing to update the item",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an item from the system by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Delete an item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted item",
                        "schema": {
                            "$ref": "#/definitions/module.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the profile information for the user who made the request.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get the current user's profile",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user profile",
                        "schema": {
                            "$ref": "#/definitions/profile.RespGetProfile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the profile information for the user who made the request.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "description": "User profile update info",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profile.ReqUpdateProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated user profile",
                        "schema": {
                            "$ref": "#/definitions/module.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile/points": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves points information for the current user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get user points",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user points",
                        "schema": {
                            "$ref": "#/definitions/profile.RespGetPoints"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile/settings/advance": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves advanced settings information for the current user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get user advanced settings",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user advanced settings",
                        "schema": {
                            "$ref": "#/definitions/profile.RespSettingsAdvance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates advanced settings for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Update user advanced settings",
                "parameters": [
                    {
                        "description": "User advanced settings update info",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profile.ReqUpdateUserSettingsAdvance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated user advanced settings",
                        "schema": {
                            "$ref": "#/definitions/module.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile/settings/memorization": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves settings information for the user who made the request.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get user settings",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user settings",
                        "schema": {
                            "$ref": "#/definitions/profile.RespSettingsMemorization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the settings for the user who made the request.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Update user settings",
                "parameters": [
                    {
                        "description": "User settings update info",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profile.ReqUpdateUserSettingsMemorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated user settings",
                        "schema": {
                            "$ref": "#/definitions/module.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/module.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "book.ReqCreateBook": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "book.RespBook": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "book.RespBooks": {
            "type": "object",
            "properties": {
                "books": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/book.RespBook"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "item.ReqCreateItem": {
            "type": "object",
            "properties": {
                "book_ids": {
                    "description": "用于接收一个或多个 BookID",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "content": {
                    "type": "string"
                },
                "tags": {
                    "description": "新增字段，用于接收一组 Tag 名称",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "item.ReqUpdateItem": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "tags": {
                    "description": "新增字段",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.Item": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string",
                    "example": "0"
                }
            }
        },
        "module.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "module.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "profile.ReqUpdateProfile": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "profile.ReqUpdateUserSettingsAdvance": {
            "type": "object",
            "properties": {
                "email_notifications": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "push_notifications": {
                    "type": "boolean"
                },
                "theme": {
                    "type": "string"
                }
            }
        },
        "profile.ReqUpdateUserSettingsMemorization": {
            "type": "object",
            "properties": {
                "difficulty_preference": {
                    "type": "integer"
                },
                "quiz_mode": {
                    "type": "string"
                },
                "review_interval": {
                    "type": "integer"
                }
            }
        },
        "profile.RespGetPoints": {
            "type": "object",
            "properties": {
                "cash": {
                    "type": "integer"
                },
                "gem": {
                    "type": "integer"
                },
                "vip_score": {
                    "type": "integer"
                }
            }
        },
        "profile.RespGetProfile": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "profile.RespSettingsAdvance": {
            "type": "object",
            "properties": {
                "email_notifications": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "push_notifications": {
                    "type": "boolean"
                },
                "theme": {
                    "type": "string"
                }
            }
        },
        "profile.RespSettingsMemorization": {
            "type": "object",
            "properties": {
                "difficulty_preference": {
                    "type": "integer"
                },
                "quiz_mode": {
                    "type": "string"
                },
                "review_interval": {
                    "description": "Definitions should match with ProfileMemorizationSetting",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
