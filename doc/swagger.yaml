definitions:
  book.ReqCreateBook:
    properties:
      description:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  book.RespBook:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  book.RespBooks:
    properties:
      books:
        items:
          $ref: '#/definitions/book.RespBook'
        type: array
      limit:
        type: integer
      page:
        type: integer
    type: object
  item.ReqCreateItem:
    properties:
      book_ids:
        description: 用于接收一个或多个 BookID
        items:
          type: integer
        type: array
      content:
        type: string
      tags:
        description: 新增字段，用于接收一组 Tag 名称
        items:
          type: string
        type: array
      type:
        type: string
    type: object
  item.ReqUpdateItem:
    properties:
      content:
        type: string
      tags:
        description: 新增字段
        items:
          type: string
        type: array
      type:
        type: string
    type: object
  model.Item:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      type:
        type: string
      updatedAt:
        type: string
      user_id:
        example: "0"
        type: string
    type: object
  module.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  module.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  profile.ReqUpdateProfile:
    properties:
      email:
        type: string
      nickname:
        type: string
    type: object
  profile.ReqUpdateUserSettingsAdvance:
    properties:
      email_notifications:
        type: boolean
      language:
        type: string
      push_notifications:
        type: boolean
      theme:
        type: string
    type: object
  profile.ReqUpdateUserSettingsMemorization:
    properties:
      difficulty_preference:
        type: integer
      quiz_mode:
        type: string
      review_interval:
        type: integer
    type: object
  profile.RespGetPoints:
    properties:
      cash:
        type: integer
      gem:
        type: integer
      vip_score:
        type: integer
    type: object
  profile.RespGetProfile:
    properties:
      avatar_url:
        type: string
      email:
        type: string
      id:
        type: integer
      nickname:
        type: string
    type: object
  profile.RespSettingsAdvance:
    properties:
      email_notifications:
        type: boolean
      language:
        type: string
      push_notifications:
        type: boolean
      theme:
        type: string
    type: object
  profile.RespSettingsMemorization:
    properties:
      difficulty_preference:
        type: integer
      quiz_mode:
        type: string
      review_interval:
        description: Definitions should match with ProfileMemorizationSetting
        type: integer
    type: object
info:
  contact: {}
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Get a paginated list of books for the user.
      parameters:
      - default: 1
        description: Page number for pagination
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved list of books
          schema:
            $ref: '#/definitions/book.RespBooks'
      summary: Get list of books with pagination
      tags:
      - book
    post:
      consumes:
      - application/json
      description: 创建一个新的书册，可选地关联标签
      parameters:
      - description: 书册创建数据
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/book.ReqCreateBook'
      produces:
      - application/json
      responses:
        "201":
          description: 成功创建书册
          schema:
            $ref: '#/definitions/book.RespBook'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/module.ErrorResponse'
      summary: 创建书册
      tags:
      - book
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a book from the system by ID.
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted book
          schema:
            type: string
      summary: Delete a book
      tags:
      - book
    get:
      consumes:
      - application/json
      description: Get detailed information about a book.
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved book
          schema:
            $ref: '#/definitions/book.RespBook'
      summary: Get a book by ID
      tags:
      - book
    put:
      consumes:
      - application/json
      description: Update information for an existing book.
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book update data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/book.ReqCreateBook'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated book
          schema:
            type: string
      summary: Update book information
      tags:
      - book
  /items:
    get:
      consumes:
      - application/json
      description: Get a list of items for the user with optional filters for book
        and type and support for pagination.
      parameters:
      - description: User ID
        in: query
        name: user_id
        type: integer
      - description: Book ID
        in: query
        name: book_id
        type: integer
      - description: Type of item
        in: query
        name: type
        type: string
      - description: Page number for pagination
        in: query
        name: page
        type: integer
      - description: Number of items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved items
          schema:
            items:
              $ref: '#/definitions/model.Item'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/module.ErrorResponse'
      summary: Get a list of items with optional filters
      tags:
      - item
    post:
      consumes:
      - application/json
      description: Create a new item in the system with optional book affiliations
        and tags.
      parameters:
      - description: Item creation data
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/item.ReqCreateItem'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created item with books and tags
          schema:
            $ref: '#/definitions/model.Item'
        "400":
          description: Bad Request if too many books or tags, or bad data
          schema:
            $ref: '#/definitions/module.ErrorResponse'
      summary: Create a new item
      tags:
      - item
  /items/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an item from the system by ID.
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted item
          schema:
            $ref: '#/definitions/module.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/module.ErrorResponse'
      summary: Delete an item
      tags:
      - item
    get:
      consumes:
      - application/json
      description: Get detailed information about an item.
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved item
          schema:
            $ref: '#/definitions/model.Item'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/module.ErrorResponse'
      summary: Get an item by ID
      tags:
      - item
    put:
      consumes:
      - application/json
      description: Update an item's type, content, or associated tags.
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      - description: Item update data
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/item.ReqUpdateItem'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated item
          schema:
            $ref: '#/definitions/module.SuccessResponse'
        "400":
          description: Bad Request with invalid item ID or update data
          schema:
            $ref: '#/definitions/module.ErrorResponse'
        "500":
          description: Internal Server Error with failing to update the item
          schema:
            $ref: '#/definitions/module.ErrorResponse'
      summary: Update an item
      tags:
      - item
  /profile/me:
    get:
      consumes:
      - application/json
      description: Retrieves the profile information for the user who made the request.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user profile
          schema:
            $ref: '#/definitions/profile.RespGetProfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/module.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/module.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/module.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get the current user's profile
      tags:
      - profile
    put:
      consumes:
      - application/json
      description: Updates the profile information for the user who made the request.
      parameters:
      - description: User profile update info
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/profile.ReqUpdateProfile'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user profile
          schema:
            $ref: '#/definitions/module.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/module.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/module.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/module.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user profile
      tags:
      - profile
  /profile/points:
    get:
      description: Retrieves points information for the current user.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user points
          schema:
            $ref: '#/definitions/profile.RespGetPoints'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/module.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/module.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/module.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user points
      tags:
      - profile
  /profile/settings/advance:
    get:
      description: Retrieves advanced settings information for the current user.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user advanced settings
          schema:
            $ref: '#/definitions/profile.RespSettingsAdvance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/module.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/module.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/module.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user advanced settings
      tags:
      - profile
    put:
      consumes:
      - application/json
      description: Updates advanced settings for the authenticated user.
      parameters:
      - description: User advanced settings update info
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/profile.ReqUpdateUserSettingsAdvance'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user advanced settings
          schema:
            $ref: '#/definitions/module.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/module.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/module.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/module.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user advanced settings
      tags:
      - profile
  /profile/settings/memorization:
    get:
      description: Retrieves settings information for the user who made the request.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user settings
          schema:
            $ref: '#/definitions/profile.RespSettingsMemorization'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/module.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/module.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/module.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user settings
      tags:
      - profile
    put:
      consumes:
      - application/json
      description: Updates the settings for the user who made the request.
      parameters:
      - description: User settings update info
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/profile.ReqUpdateUserSettingsMemorization'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user settings
          schema:
            $ref: '#/definitions/module.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/module.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/module.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/module.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user settings
      tags:
      - profile
swagger: "2.0"
