{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/books": {
            "get": {
                "description": "Get a paginated list of books for the user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Get list of books with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of books",
                        "schema": {
                            "$ref": "#/definitions/dto.RespBooks"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new book and optionally associates tags with it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Create a book",
                "parameters": [
                    {
                        "description": "Book creation data",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/book.ReqCreateOrUpdateBook"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created book",
                        "schema": {
                            "$ref": "#/definitions/dto.RespBookCreate"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/books/{id}": {
            "get": {
                "description": "Get detailed information about a book.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Get a book by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved book",
                        "schema": {
                            "$ref": "#/definitions/dto.RespBookGet"
                        }
                    }
                }
            },
            "put": {
                "description": "Update information for an existing book.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Update book information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Book update data",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/book.ReqCreateOrUpdateBook"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated book",
                        "schema": {
                            "$ref": "#/definitions/dto.RespBookUpdate"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a book from the system by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Delete a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted book",
                        "schema": {
                            "$ref": "#/definitions/dto.RespBookDelete"
                        }
                    }
                }
            }
        },
        "/books/{id}/items": {
            "get": {
                "description": "Get a paginated list of items for the book.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Get item list of books with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "items of the book found",
                        "schema": {
                            "$ref": "#/definitions/dto.RespItemList"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a list of items to the specified book.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Add items to a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of item IDs to add",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/book.ReqAddItems"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "items added to book successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to upsert book items",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a list of items from the specified book.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Remove items from a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of item IDs to remove",
                        "name": "item_ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "items removed from book successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to remove book items",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dungeon/campaigns/{id}/monsters": {
            "get": {
                "description": "获取复习计划的所有Monsters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Get all the monsters of a specific campaign dungeon",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dungeon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sort by field (familiarity, difficulty, importance)",
                        "name": "sort_by",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page for pagination",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved monsters",
                        "schema": {
                            "$ref": "#/definitions/dto.RespMonsterList"
                        }
                    },
                    "404": {
                        "description": "Dungeon not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dungeon/campaigns/{id}/practice": {
            "get": {
                "description": "从 Campaign Dungeon 中提取一些要复习的 Monster 缓存到本地",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Get monsters for review",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dungeon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of monsters to fetch",
                        "name": "count",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved monsters",
                        "schema": {
                            "$ref": "#/definitions/dto.RespMonsterList"
                        }
                    },
                    "404": {
                        "description": "Dungeon not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dungeon/campaigns/{id}/submit": {
            "post": {
                "description": "上报复习计划的Monster结果",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Report the result of a specific monster recall",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dungeon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UserMonster result data",
                        "name": "result",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dungeon.ReqReportMonsterResult"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully reported result",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Dungeon or UserMonster not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dungeon/dungeons": {
            "get": {
                "description": "获取复习计划列表",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Get the list of dungeon campaigns",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved dungeons",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.RespDungeonList"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "创建新的复习计划",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Create a new dungeon campaign",
                "parameters": [
                    {
                        "description": "Dungeon campaign data",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dungeon.ReqCreateDungeon"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created dungeon",
                        "schema": {
                            "$ref": "#/definitions/dto.RespDungeon"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dungeon/dungeons/{id}": {
            "get": {
                "description": "获取复习计划详情",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Get the details of a specific dungeon campaign",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dungeon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved dungeon",
                        "schema": {
                            "$ref": "#/definitions/dto.RespDungeon"
                        }
                    },
                    "404": {
                        "description": "Dungeon not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "更新复习计划",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Update a specific dungeon campaign",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dungeon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dungeon campaign data",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dungeon.ReqUpdateDungeon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated dungeon",
                        "schema": {
                            "$ref": "#/definitions/dto.RespDungeon"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Dungeon not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "删除复习计划",
                "tags": [
                    "dungeon"
                ],
                "summary": "Delete a specific dungeon campaign",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dungeon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted dungeon",
                        "schema": {
                            "$ref": "#/definitions/dto.RespDungeon"
                        }
                    },
                    "404": {
                        "description": "Dungeon not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dungeon/dungeons/{id}/books": {
            "get": {
                "description": "获取复习计划的 Books",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Get the books of a specific dungeon",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dungeon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "404": {
                        "description": "Dungeon not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "向现有复习计划添加书籍",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Add books to an existing dungeon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dungeon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Books to add",
                        "name": "books",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dungeon.ReqAddDungeonBooks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RespDungeon"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "删除复习计划的 Books",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Remove books from a specific dungeon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dungeon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dungeon books data",
                        "name": "books",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dungeon.ReqRemoveDungeonBooks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Dungeon or Book not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dungeon/dungeons/{id}/items": {
            "get": {
                "description": "获取复习计划的 Items",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Get the items of a specific dungeon",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dungeon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "404": {
                        "description": "Dungeon not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "向现有复习计划添加学习材料",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Add items to an existing dungeon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dungeon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Items to add",
                        "name": "items",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dungeon.ReqAddDungeonItems"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RespDungeon"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "删除复习计划的 Items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Remove items from a specific dungeon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dungeon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dungeon items data",
                        "name": "items",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dungeon.ReqRemoveDungeonItems"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Dungeon or Item not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dungeon/dungeons/{id}/tags": {
            "get": {
                "description": "获取复习计划的 Tags",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Get the tags of a specific dungeon",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dungeon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "404": {
                        "description": "Dungeon not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "删除复习计划的 Tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Remove tags from a specific dungeon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dungeon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dungeon tags data",
                        "name": "tags",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dungeon.ReqRemoveDungeonTags"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Dungeon or Tag not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dungeon/endless/{id}/monsters": {
            "get": {
                "description": "获取复习计划的所有Monsters及其关联的 Items, Books, Tags",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dungeon"
                ],
                "summary": "Get all the monsters of a specific endless dungeon with associations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dungeon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RespMonsterList"
                        }
                    },
                    "404": {
                        "description": "Dungeon not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items": {
            "get": {
                "description": "Get a list of items for the user with optional filters for book and type and support for pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Get a list of items with optional filters",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Type of item",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved items",
                        "schema": {
                            "$ref": "#/definitions/dto.RespItemList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new item in the system with optional book affiliations and tags.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Create a new item",
                "parameters": [
                    {
                        "description": "Item creation data",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.ReqCreateItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created item with books and tags",
                        "schema": {
                            "$ref": "#/definitions/dto.RespItemCreate"
                        }
                    },
                    "400": {
                        "description": "Bad Request if too many books or tags, or bad data",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/upload": {
            "post": {
                "description": "Upload a file to create multiple items in the system.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Upload items from a file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File containing items data, support csv and toml file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "book_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created items from file",
                        "schema": {
                            "$ref": "#/definitions/dto.RespItemList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/{id}": {
            "get": {
                "description": "Get detailed information about an item, including its tags.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Get an item by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved item with tags",
                        "schema": {
                            "$ref": "#/definitions/dto.RespItemGet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an item's type, content, or associated tags.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Update an item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Item update data",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.ReqUpdateItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the updater",
                        "schema": {
                            "$ref": "#/definitions/dto.RespItemUpdate"
                        }
                    },
                    "400": {
                        "description": "Bad Request with invalid item ID or update data",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error with failing to update the item",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an item from the system by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item"
                ],
                "summary": "Delete an item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted item",
                        "schema": {
                            "$ref": "#/definitions/dto.RespItemDelete"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the profile information for the user who made the request.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get the current user's profile",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user profile",
                        "schema": {
                            "$ref": "#/definitions/dto.RespProfile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the profile information for the user who made the request.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "description": "User profile update info",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profile.ReqUpdateProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated user profile",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile/points": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves points information for the current user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get user points",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user points",
                        "schema": {
                            "$ref": "#/definitions/dto.RespPoints"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile/settings/advance": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves advanced settings information for the current user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get user advanced settings",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user advanced settings",
                        "schema": {
                            "$ref": "#/definitions/dto.RespSettingsAdvance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates advanced settings for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Update user advanced settings",
                "parameters": [
                    {
                        "description": "User advanced settings update info",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profile.ReqUpdateUserSettingsAdvance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated user advanced settings",
                        "schema": {
                            "$ref": "#/definitions/dto.RespSettingsAdvance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile/settings/memorization": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves settings information for the user who made the request.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get user settings",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user settings",
                        "schema": {
                            "$ref": "#/definitions/dto.RespSettingsMemorization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the settings for the user who made the request.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Update user settings",
                "parameters": [
                    {
                        "description": "User settings update info",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profile.ReqUpdateUserSettingsMemorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated user settings",
                        "schema": {
                            "$ref": "#/definitions/dto.RespSettingsMemorization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "description": "Retrieves a list of all tags.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "summary": "Get all tags",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.RespTagList"
                            }
                        }
                    }
                }
            }
        },
        "/tags/{id}/items": {
            "get": {
                "description": "Retrieves a list of items associated with a specific tag.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "summary": "Get items by tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved items",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.RespItemList"
                            }
                        }
                    }
                }
            }
        },
        "/tags/{tag}/books": {
            "get": {
                "description": "Retrieves a list of books associated with a specific tag name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "summary": "Get books by tag name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved books",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.RespBookList"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "book.ReqAddItems": {
            "type": "object",
            "properties": {
                "item_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "book.ReqCreateOrUpdateBook": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "def.AttackResult": {
            "type": "string",
            "enum": [
                "defeat",
                "miss",
                "hit",
                "kill",
                "complete"
            ],
            "x-enum-varnames": [
                "AttackDefeat",
                "AttackMiss",
                "AttackHit",
                "AttackKill",
                "AttackComplete"
            ]
        },
        "def.DifficultyLevel": {
            "type": "integer",
            "enum": [
                1,
                2,
                3,
                17,
                18,
                19,
                33,
                34,
                35,
                49,
                50,
                51,
                65,
                66,
                67,
                68
            ],
            "x-enum-varnames": [
                "NoviceNormal",
                "NoviceAdvanced",
                "NoviceChallenge",
                "AmateurNormal",
                "AmateurAdvanced",
                "AmateurChallenge",
                "ProfessionalNormal",
                "ProfessionalAdvanced",
                "ProfessionalChallenge",
                "ExpertNormal",
                "ExpertAdvanced",
                "ExpertChallenge",
                "MasterNormal",
                "MasterAdvanced",
                "MasterChallenge",
                "MasterExtreme"
            ]
        },
        "def.DungeonType": {
            "type": "integer",
            "enum": [
                1,
                2,
                33
            ],
            "x-enum-comments": {
                "DungeonTypeCampaign": "战役地牢",
                "DungeonTypeEndless": "无尽地牢",
                "DungeonTypeInstance": "即时副本 (随机地牢)"
            },
            "x-enum-varnames": [
                "DungeonTypeCampaign",
                "DungeonTypeEndless",
                "DungeonTypeInstance"
            ]
        },
        "def.ImportanceLevel": {
            "type": "integer",
            "enum": [
                1,
                2,
                3,
                17,
                18,
                19,
                20,
                33,
                34,
                35,
                36
            ],
            "x-enum-varnames": [
                "DomainGeneral",
                "DomainKey",
                "DomainEssential",
                "AreaGeneral",
                "AreaKey",
                "AreaEssential",
                "AreaMasterPiece",
                "GlobalGeneral",
                "GlobalKey",
                "GlobalEssential",
                "GlobalMasterPiece"
            ]
        },
        "def.RecallIntervalLevel": {
            "type": "object"
        },
        "dto.Book": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.Dungeon": {
            "type": "object",
            "properties": {
                "books": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rule": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/def.DungeonType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.DungeonMonster": {
            "type": "object",
            "properties": {
                "avatar": {
                    "description": "怪物头像",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "difficulty": {
                    "description": "Item -\u003e DungeonMonster 单向同步",
                    "allOf": [
                        {
                            "$ref": "#/definitions/def.DifficultyLevel"
                        }
                    ]
                },
                "dungeon_id": {
                    "type": "integer"
                },
                "familiarity": {
                    "description": "以下为宽表内容，为了加速查询",
                    "type": "integer"
                },
                "importance": {
                    "description": "Item -\u003e DungeonMonster 单向同步",
                    "allOf": [
                        {
                            "$ref": "#/definitions/def.ImportanceLevel"
                        }
                    ]
                },
                "item_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "next_practice_at": {
                    "description": "下次复习时间",
                    "type": "string"
                },
                "practice_at": {
                    "description": "用于 runtime",
                    "type": "string"
                },
                "practice_count": {
                    "description": "复习次数 (考虑到可能会有 merge 次数等逻辑，这里先用一个相对大的空间）",
                    "type": "integer"
                },
                "source_id": {
                    "description": "记录插入时来源，方便原路径修改删除等",
                    "type": "integer"
                },
                "source_type": {
                    "description": "system",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.MonsterSource"
                        }
                    ]
                },
                "visibility": {
                    "description": "以下为游戏性相关内容，由 AI 生成",
                    "type": "integer"
                }
            }
        },
        "dto.Item": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "creator_id": {
                    "type": "integer"
                },
                "difficulty": {
                    "$ref": "#/definitions/def.DifficultyLevel"
                },
                "id": {
                    "type": "integer"
                },
                "importance": {
                    "$ref": "#/definitions/def.ImportanceLevel"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.Points": {
            "type": "object",
            "properties": {
                "cash": {
                    "type": "integer"
                },
                "gem": {
                    "type": "integer"
                },
                "vip_score": {
                    "type": "integer"
                }
            }
        },
        "dto.Profile": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "dto.RespBookCreate": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Book"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.RespBookDelete": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.RespBookGet": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Book"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.RespBookList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Book"
                    }
                },
                "extra": {},
                "limit": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.RespBookUpdate": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Book"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.RespBooks": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Book"
                    }
                },
                "extra": {},
                "limit": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.RespDungeon": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Dungeon"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.RespDungeonList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Dungeon"
                    }
                },
                "extra": {},
                "limit": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.RespItemCreate": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Item"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.RespItemDelete": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Item"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.RespItemGet": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Item"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.RespItemList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Item"
                    }
                },
                "extra": {},
                "limit": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.RespItemUpdate": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Item"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.RespMonsterList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DungeonMonster"
                    }
                },
                "extra": {},
                "limit": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.RespPoints": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Points"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.RespProfile": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Profile"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.RespSettingsAdvance": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.SettingsAdvance"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.RespSettingsMemorization": {
            "type": "object"
        },
        "dto.RespTagList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "extra": {},
                "limit": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.SettingsAdvance": {
            "type": "object",
            "properties": {
                "email_notifications": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "push_notifications": {
                    "type": "boolean"
                },
                "theme": {
                    "type": "string"
                }
            }
        },
        "dto.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "dungeon.ReqAddDungeonBooks": {
            "type": "object",
            "properties": {
                "books": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dungeon.ReqAddDungeonItems": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dungeon.ReqCreateDungeon": {
            "type": "object",
            "properties": {
                "books": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rule": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/def.DungeonType"
                }
            }
        },
        "dungeon.ReqRemoveDungeonBooks": {
            "type": "object",
            "properties": {
                "books": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dungeon.ReqRemoveDungeonItems": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dungeon.ReqRemoveDungeonTags": {
            "type": "object",
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dungeon.ReqReportMonsterResult": {
            "type": "object",
            "properties": {
                "monster_id": {
                    "type": "integer"
                },
                "result": {
                    "description": "\"defeat\", \"miss\", \"hit\", \"kill\", \"complete\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/def.AttackResult"
                        }
                    ]
                }
            }
        },
        "dungeon.ReqUpdateDungeon": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "rule": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/def.DungeonType"
                }
            }
        },
        "item.ReqCreateItem": {
            "type": "object",
            "properties": {
                "book_ids": {
                    "description": "用于接收一个或多个 BookID",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "content": {
                    "type": "string"
                },
                "difficulty": {
                    "description": "难度，默认值为 NoviceNormal (0x01), todo: 考虑是否允许用户编辑，编辑后要引入写扩散",
                    "allOf": [
                        {
                            "$ref": "#/definitions/def.DifficultyLevel"
                        }
                    ]
                },
                "importance": {
                    "description": "重要程度，默认值为 DomainGeneral (0x01), todo: 考虑是否允许用户编辑",
                    "allOf": [
                        {
                            "$ref": "#/definitions/def.ImportanceLevel"
                        }
                    ]
                },
                "tags": {
                    "description": "新增字段，用于接收一组 Tag 名称",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "item.ReqUpdateItem": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "difficulty": {
                    "description": "难度，默认值为 NoviceNormal (0x01)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/def.DifficultyLevel"
                        }
                    ]
                },
                "importance": {
                    "description": "重要程度，默认值为 DomainGeneral (0x01)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/def.ImportanceLevel"
                        }
                    ]
                },
                "tags": {
                    "description": "新增字段",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.MonsterSource": {
            "type": "integer",
            "enum": [
                1,
                2
            ],
            "x-enum-varnames": [
                "MonsterSourceItem",
                "MonsterSourceBook"
            ]
        },
        "profile.ReqUpdateProfile": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "profile.ReqUpdateUserSettingsAdvance": {
            "type": "object",
            "properties": {
                "email_notifications": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "push_notifications": {
                    "type": "boolean"
                },
                "theme": {
                    "type": "string"
                }
            }
        },
        "profile.ReqUpdateUserSettingsMemorization": {
            "type": "object",
            "properties": {
                "difficulty_preference": {
                    "type": "integer"
                },
                "quiz_mode": {
                    "type": "string"
                },
                "review_interval": {
                    "$ref": "#/definitions/def.RecallIntervalLevel"
                }
            }
        },
        "utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}